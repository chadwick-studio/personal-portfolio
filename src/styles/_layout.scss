.grid {
  display: grid;
}
.flex {
  display: flex;
}
.flex-wrap {
  flex-wrap: wrap;
}
.inline-flex {
  display: inline-flex;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.block {
  display: block;
}
.uppercase {
  text-transform: uppercase;
}
.lowercase {
  text-transform: lowercase;
}

.block-flow > * + * {
  margin-block-start: var(--_flow-space, 2rem);
}

.line-height-1 {
  line-height: 1;
}

.fit-content {
  width: fit-content;
}

.max-content {
  width: max-content;
}

.min-content {
  width: min-content;
}

:root {
  /* Layout default props */
  --layout-column-min: 30ch;
  --layout-gap: 3vmax;
}

.layout-grid {
  --layout-grid-min: var(--layout-column-min);
  --layout-grid-gap: var(--layout-gap);

  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(100%, var(--layout-grid-min)), 1fr)
  );
  gap: var(--layout-grid-gap);
}

.flex-layout-grid {
  --flex-grid-min: var(--layout-column-min);
  --flex-grid-gap: var(--layout-gap);

  display: flex;
  flex-wrap: wrap;
  gap: var(--flex-grid-gap);
  > * {
    flex: 1 1 var(--flex-grid-min);
  }
}

//bug w/ safari
:is(.layout-grid, .flex-layout-grid) > * {
  container: var(--grid-item-container, grid-item) / inline-size;
}
